# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_ngram.ipynb.

# %% auto 0
__all__ = ['NgramDataset']

# %% ../nbs/05_ngram.ipynb 2
from functools import reduce
from pathlib import Path
from urllib.request import urlretrieve
import torch
import torch.nn as nn
import torch.nn.functional as F
import matplotlib.pyplot as plt
import torcheval.metrics as tem
import fastcore.all as fc

from .dataloaders import DataLoaders
from .learner import *
from .activations import *

# %% ../nbs/05_ngram.ipynb 3
class NgramDataset():
    def __init__(self, lines, c2i, n=2):
        self.x = []
        self.y = []
        for line in lines:           
            x = '.'*(n-1)
            for y in line + '.':
                self.x.append([c2i[xi] for xi in x])
                self.y.append(c2i[y])
                x = (x + y)[1:]
        self.x = torch.tensor(self.x)
        self.y = torch.tensor(self.y).squeeze()
    
    def __getitem__(self, i):
        return self.x[i], self.y[i]

    def __len__(self):
        return len(self.x)
